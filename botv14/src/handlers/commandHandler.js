import { EmbedBuilder } from 'discord.js';

export async function handleCommandHelp(interaction) {
    const commandName = interaction.options.getString('name')?.toLowerCase();

    if (!commandName) {
        return interaction.reply({
            content: '‚ùå Vous devez sp√©cifier une commande valide pour afficher son aide.',
            ephemeral: true,
        });
    }

    const embed = createCommandEmbed(commandName);
    await interaction.reply({ embeds: [embed], ephemeral: true });
}

function createCommandEmbed(commandName) {
    const embed = new EmbedBuilder().setTimestamp();

    switch (commandName) {
        case 'service':
            return embed
                .setTitle('üé´ Commande Service')
                .setDescription('Gestion des services de tickets')
                .addFields([
                    {
                        name: '/service add',
                        value: `Cr√©er un nouveau service de tickets
‚Ä¢ \`name\` - Nom du service
‚Ä¢ \`description\` - Description du service
‚Ä¢ \`command\` - Commande pour ouvrir le ticket (ex: !support)`
                    },
                    {
                        name: '/service roles',
                        value: `G√©rer les r√¥les d'un service
‚Ä¢ \`name\` - Nom du service
‚Ä¢ \`add_role\` - Ajouter un r√¥le (optionnel)
‚Ä¢ \`remove_role\` - Retirer un r√¥le (optionnel)`
                    },
                    {
                        name: '/service action',
                        value: `Modifier l'√©tat d'un service
‚Ä¢ \`name\` - Nom du service
‚Ä¢ \`status\` - Nouvel √©tat (OPEN, CLOSED, MAINTENANCE, LIMITED)
‚Ä¢ \`reason\` - Raison du changement (optionnel)`
                    },
                    {
                        name: 'Autres sous-commandes',
                        value: `‚Ä¢ \`/service list\` - Voir la liste des services
‚Ä¢ \`/service delete\` - Supprimer un service
‚Ä¢ \`/service post\` - Afficher la liste dans le canal`
                    }
                ])
                .setColor('#3498db');

        case 'ticket':
            return embed
                .setTitle('üé´ Commande Ticket')
                .setDescription('Gestion des tickets')
                .addFields([
                    {
                        name: 'Commandes disponibles',
                        value: `‚Ä¢ \`/ticket list\` - Voir les tickets actifs
‚Ä¢ \`/ticket close\` - Fermer un ticket sp√©cifique`
                    },
                    {
                        name: 'En messages priv√©s',
                        value: 'Utilisez la commande du service (ex: !support) pour ouvrir un ticket'
                    }
                ])
                .setColor('#2ecc71');

        case 'presence':
            return embed
                .setTitle('üë• Commande Pr√©sence')
                .setDescription('Gestion des pr√©sences')
                .addFields([
                    {
                        name: '/presence absent',
                        value: `D√©clarer une absence
‚Ä¢ \`reason\` - Raison de l'absence
‚Ä¢ \`until\` - Date de retour (optionnel, format: YYYY-MM-DD)`
                    },
                    {
                        name: '/presence present',
                        value: 'Marquer son retour'
                    },
                    {
                        name: '/presence status',
                        value: 'Voir son statut actuel'
                    }
                ])
                .setColor('#e74c3c');

        case 'convocation':
            return embed
                .setTitle('üì® Commande Convocation')
                .setDescription('Gestion des convocations')
                .addFields([
                    {
                        name: '/convocation create',
                        value: `Convoquer un utilisateur
‚Ä¢ \`user\` - Utilisateur √† convoquer
‚Ä¢ \`reason\` - Raison de la convocation`
                    },
                    {
                        name: '/convocation complete',
                        value: `Marquer une convocation comme trait√©e
‚Ä¢ \`user\` - Utilisateur convoqu√©
‚Ä¢ \`summary\` - R√©sum√© de l'entretien`
                    },
                    {
                        name: 'Autres sous-commandes',
                        value: `‚Ä¢ \`/convocation list\` - Voir les convocations en cours
‚Ä¢ \`/convocation recent\` - Voir les convocations des derni√®res 24h`
                    }
                ])
                .setColor('#f1c40f');

        case 'config':
            return embed
                .setTitle('‚öôÔ∏è Commande Config')
                .setDescription('Configuration du bot (Administrateurs uniquement)')
                .addFields([
                    {
                        name: '/config logs',
                        value: `Configurer les salons de logs
‚Ä¢ \`ticket_logs\` - Logs des tickets
‚Ä¢ \`presence_logs\` - Logs des pr√©sences
‚Ä¢ \`summon_logs\` - Logs des convocations`
                    },
                    {
                        name: '/config summon',
                        value: `Configurer les r√¥les de convocation
‚Ä¢ \`add_role\` - Ajouter un r√¥le autoris√©
‚Ä¢ \`remove_role\` - Retirer un r√¥le autoris√©`
                    },
                    {
                        name: '/config help',
                        value: 'Cr√©er le salon d\'aide avec la liste des commandes'
                    }
                ])
                .setColor('#9b59b6');

        case 'setup':
            return embed
                .setTitle('üîß Commande Setup')
                .setDescription('Configuration initiale du bot')
                .addFields([
                    {
                        name: 'Utilisation',
                        value: '`/setup` - Lance la configuration initiale du bot'
                    }
                ])
                .setColor('#34495e');

        default:
            return embed
                .setTitle(`‚ùå Commande "${commandName}" inconnue`)
                .setDescription('Essayez `/commande name:help` pour obtenir une liste compl√®te.')
                .setColor('#FF0000');
    }
}
